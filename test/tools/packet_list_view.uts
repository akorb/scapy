% Regression tests for PacketListView

+ Configuration
~ conf

= Imports
import mock
import re

from scapy.layers.can import CAN
from scapy.tools.packet_viewer.columns_manager import ColumnsManager
from scapy.tools.packet_viewer.packet_list_view import PacketListView

= Function definitions

@mock.patch("scapy.tools.packet_viewer.main_window.MainWindow")
def setUp(main_window_mock):
    main_window_mock = main_window_mock
    cm = ColumnsManager(None, CAN)
    packet_list_view = PacketListView(main_window_mock, cm)
    return main_window_mock, packet_list_view

+ Tests

= Test packets received
main_window_mock, packet_list_view = setUp()
packet = CAN(identifier=0x123, data=b'\x90\x0a\xff')
packet = CAN(bytes(packet))
packet_list_view.add_packet(packet)
assert len(packet_list_view.body) == 1
assert re.match(r">> 0 +\d+\.\d+ +11 +291 +3 +0 +\\x90\\n\\xff",
                packet_list_view.body[0].base_widget.text)

# Second packet
packet = CAN(identifier=0x7ff, data=b'')
packet = CAN(packet.build())
packet_list_view.add_packet(packet)
assert len(packet_list_view.body) == 2
assert re.match(r">> 1 +\d+\.\d+ +8 +2047 +0 +0 + *",
                packet_list_view.body[1].base_widget.text)

= Test show details functionality
main_window_mock, packet_list_view = setUp()
packet_list_view.keypress(None, 'enter')
# Nothing focused since no packet received
main_window_mock.show_details.assert_not_called()

packet = CAN(identifier=0x123, data=b'\x90\x0a\xff')
packet = CAN(bytes(packet))
packet_list_view.add_packet(packet)

packet_list_view.keypress(None, 'enter')
main_window_mock.show_details.assert_called_once()

# Here we have to add a size (100, 100) because 'down' is handled by the widget itself
# and this handler expects a size. The (100, 100) is arbitrary.
packet_list_view.keypress((100, 100), 'down')
main_window_mock.update_details.assert_called_once()
packet_list_view.keypress(None, 'c')
main_window_mock.close_details.assert_called_once()
